#
# Check that suidperl is installed properly.
#
use strict;
use libinstall;
use installvars;

my $PERL     = "/usr/bin/perl";
my $SUIDPERL = "/usr/bin/suidperl";

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    # Replace if this script does an update for ip/domain.
    return 0
	if ($isupdate);

    Phase "perl", "Checking for setuid perl", sub {
	#
	# See if suidperl is supported. Perl 5.12 and beyond don't have it.
	#
	if (-x $PERL) {
	    my $vstr = `$PERL -v | grep version`;
	    if ($vstr =~ /This is perl 5, version (\d+),/) {
		if (int($1) >= 12) {
		    PhaseSkip("Not used");
		}
	    }
	}
	#
	# If perl is not installed, skip this
	#
	else {
	    PhaseSkip("Perl is not installed!");
	}

	Phase "sperl", "Checking for sperl", sub {
	    # XXX old school pkg tools, anything newer won't have suid perl
	    if (ExecQuiet("pkg_info -L -x perl-5 | fgrep -q -s sperl") == 0) {
		PhaseSkip("Perl is okay");
	    }
	    PhaseFail("setuid perl is not set up properly. Read the wiki!");
	};
        #
        # New version perl does not appear to require this anymore. In fact, it
        # seems to break things if it is!
        #
	if ($FBSD_MAJOR == 4) {
	    Phase "suidperl", "Setting the suid bit on $SUIDPERL", sub {
		PhaseSkip("Already done") if (-u $SUIDPERL);
		ExecQuietFatal("$CHMOD u+s $SUIDPERL");
	    };
	}
	else {
	    Phase "suidperl", "UnSetting the suid bit on $SUIDPERL", sub {
		PhaseSkip("Already done") if (! -u $SUIDPERL);
		ExecQuietFatal("$CHMOD u-s $SUIDPERL");
	    };
	}
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
