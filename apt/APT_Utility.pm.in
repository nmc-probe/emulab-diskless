#!/usr/bin/perl -wT
#
# Copyright (c) 2007-2016 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
#
# Stuff that has no where else to go.
#
package APT_Utility;

use strict;
use English;
use Data::Dumper;
use Carp;
use Exporter;
use vars qw(@ISA @EXPORT);

@ISA    = "Exporter";
@EXPORT = qw ( );

# Must come after package declaration!
use emdb;
use libtestbed;
use APT_Instance;
use Project;
use Group;

# Configure variables
my $TB		  = "@prefix@";
my $MAINSITE      = @TBMAINSITE@;
my $TBOPS         = "@TBOPSEMAIL@";

#
# Find all of the instances a user has (should have) an account on, and
# mark those instances for update.
#
sub UpdateInstancesByUser($)
{
    my ($user) = @_;
    my @projects  = ();
    my %instances = ();

    if ($user->ProjectMembershipList(\@projects)) {
	return -1;
    }
    return 0
	if (!@projects);

    foreach my $project (@projects) {
	my $pid_idx = $project->pid_idx();

	my $query_result =
	    DBQueryWarn("select uuid from apt_instances ".
			"where pid_idx='$pid_idx'");
	return -1
	    if (!$query_result);

	while (my ($uuid) = $query_result->fetchrow_array()) {
	    my $instance = APT_Instance->Lookup($uuid);
	    next
		if (!defined($instance));
	    $instances{$uuid} = $instance;
	}
    }
    # Update each instance only once. 
    foreach my $instance (values(%instances)) {
	$instance->Update({"needupdate" => 1});
    }
    return 0;
}
