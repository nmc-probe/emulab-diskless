#! /usr/local/bin/bash

source checkutils.sh


checkdrift_main() {
    set -u
    projdir=/proj/emulab-ops/nodecheck
    cd $projdir
    if (( $# )) ; then
	allnodes="$@"
    else
	allnodes=$(ls -d pc* pg* dbox*)
    fi
allnodes="pc27 pc164 pc318 pc341 pc490"
    for host in $allnodes ; do
	if [ -d $projdir/$host/.tbdb ] ; then
	    cd $projdir/$host/.tbdb
	    newest=$(ls -t | head -1)
	    allchecks=$(ls -t)
	    readtmcinfo $newest hwinvcopy
	    declare -i countsame=-1
	    for tocheck in $allchecks ; do
		readtmcinfo $tocheck hwinv
		# note: will check against self for sanity
		comparetmcinfo /tmp/.$$checkdiff
		if [ -s /tmp/.$$checkdiff ] ; then
		    echo ""
		    echo "$host $newest $tocheck are not the same"
		    echo "====================================================="
		    # reset compar file
		    echo "diff $tocheck $newest"
		    diff $tocheck $newest
		    newest=$tocheck
		    readtmcinfo $newest hwinvcopy
		    # XXX - start
		    # XXX Do not enable this code unless you want
		    # the files moved out of the way
#		    [[ ! -d $projdir/$host/.tbdb/.notsame ]] && sudo mkdir -p $projdir/$host/.tbdb/.notsame 
#		    sudo mv $tocheck $projdir/$host/.tbdb/.notsame
		    # XXX - end
		else
# 		    echo "$host $newest $tocheck SAME"
		    ((countsame++))
		fi
		rm -f /tmp/.$$checkdiff
	    done
	    echo "$host $countsame inventory files are the same"
	else
	    echo "No record of node id \"$host\"."
	fi
    done
}

gentbsql_main() {
    set -u
    projdir=/proj/emulab-ops/nodecheck
    cd $projdir
    if (( $# )) ; then
	allnodes="$@"
    else
	allnodes=$(ls -d pc* pg* dbox*)
    fi

    for host in $allnodes ; do
	if [ -d $projdir/$host ] ; then
	    cd $projdir/$host
	    if [ -z "$(grep "Diff Report" diff)" ] ; then
		echo "$host Inventory Report to old to use"
		continue
	    fi
	    listofobjs="DISKINFO CPUINFO MEMINFO NETINFO"
	    for i in $listofobjs ; do
		toadd="$(grep $i diff)"
		[[ "$toadd" = "${toadd/match}" ]] || continue
		if [ -n "$toadd" ] ; then
		    toadd=${toadd/$i}
		    printf "\nmysql -e \"insert into %s set node_id='%s' %s;\" tbdb\n" "$i" "$host" "$toadd"
		fi
	    done
	    listofdisks=$(grep 'DISKs:' diff)
	    listofdisks=${listofdisks//DISKs:}
	    for i in $listofdisks ; do
		toadd=$(grep $i node)
		if [ -n "$toadd" ] ; then
		    toadd=${toadd/DISKUNIT}
		    printf "mysql -e \"insert into DISKUNIT set node_id='%s' %s;\" tbdb\n" "$host" "$toadd"
		else
		    toadd="SN=\"$i\""
		    printf "mysql -e \"delete from DISKUNIT where node_id='%s' and %s;\" tbdb\n" "$host" "$toadd"
		fi
	    done
	    listofnics=$(grep 'NICs:' diff)
	    listofnics=${listofnics//NICs:/}
	    for i in $listofnics ; do
		toadd=$(grep $i node)
		if [ -n "$toadd" ] ; then
		    toadd=${toadd/NETUNIT}
		    printf "mysql -e \"insert into NETUNIT set node_id='%s' %s;\" tbdb\n" "$host" "$toadd"
		else
		    toadd="ID=\"$i\""
		    printf "mysql -e \"delete from NETUNIT where node_id='%s' and %s;\" tbdb\n" "$host" "$toadd"
		fi
	    done
	else
	    echo "No record of node id \"$host\"."
	fi
    done

}

setdirstructure() {
    # start XXX
    # decided to change names again, rename if old names -- XXX remove this after all node have run the new code
    # take into consideration if old directory structure was added to to a new directory structure 
    set -u
    projdir=/proj/emulab-ops/nodecheck
    cd $projdir
    allnodes=$(ls -d pc* pg* dbox*)
    dirs2workon=""
    for i in $allnodes; do [[ -L $i/$i.diff ]] && dirs2workon+="$i "; done
    owd=$PWD

    for host in $dirs2workon ; do
    	if [ -d ${projdir}/$host ] ; then
	    cd ${projdir}/$host
	    [[ -L $host.full ]] && rm $host.full
	    [[ -L $host.diff ]] && rm $host.diff
	    [[ -L $host ]] && rm $host
	    for i in full diff tbdb ; do
		if [ -d $i ] ; then
		    [[ ! -d .$i ]] && (mkdir .$i ; chmod g+x .$i)
		    list=$(ls -A $i)
		    for j in $list ; do
			mv $i/$j .$i
		    done
		    rmdir $i
		fi
	    done
	    cd $owd
	fi
    done
    
    # put links in place
    for i in $dirs2workon ; do
	cd $projdir/$i
	links="full diff node"
	for link in $links ; do
	    case $link in
		full | diff )
		    # make the symlinks
		    if [ ! -e ${link} -a -d .${link} ] ; then
			linkto=$(ls -t .${link} | head -1)
			if [ -n "$linkto" ] ; then
 			    ln -s .${link}/${linkto} $link
			fi
		    fi
		    ;;
		node )
		    if [ ! -e ${link} -a -d .tbdb ] ; then
			linkto=$(ls -t .tbdb | head -1)
			if [ -n "$linkto" ] ; then
 			    ln -s .tbdb/${linkto} $link
			    ln -s .tbdb/${linkto} $i
			fi
		    fi
		    ;;
	    esac
	done
    done
}


if [ "$0" != "${0/setdir}" ] ; then
    setdirstructure
elif [ "$0" != "${0/sql}" ] ; then
    gentbsql_main $@
elif [ "$0" != "${0/drift}" ] ; then
    checkdrift_main $@
else
    "Print useage help"
fi


